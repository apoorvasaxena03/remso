function [  ] = dispFunc(k,lag,violationH,normDu,rho,tau,xfd,M,relax,debugInfo,header,QPIT )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

spaceforIt = 4;
digitsK = numel(num2str(k));

if ~relax
    space = ['*',repmat(' ',1,spaceforIt-digitsK-1)];
else
    space = repmat(' ',1,spaceforIt-digitsK);
end

ePlusSpace = 14;

QPI = QPIT;
digitsQPI = numel(num2str(QPI));

digitsitEff = numel(num2str(floor(debugInfo{1}.itsMean)));

if k ==1
    fid = fopen('log.txt','w');
else
	fid = fopen('log.txt','a');
end
if header
    
    fout = ['it  ',...
        'objective',repmat(' ',1,ePlusSpace-9),...
        '|LAG|   ',...
        '|duN|   ',...
        '|eq|    ',...
        '|ineq|  ',...
        'rho     ',...
        'tau     ',...
        'stepL   ',...
        'merit',repmat(' ',1,ePlusSpace-5),...
        'gradMerit ',...
        'ef','   ',...
        'QPI ',...
        '|c|     ',...
        '|Q|\n'];
    
    displayMessage( fout,{},'fid',fid);
end

fout = ['%d%s',...
    '%+e',' ',...
    '%.1e ',...
    '%.1e ',...
    '%.1e ',...
    '%.1e ',...
    '%.1e ',...
    '%.1e ',...
    '%.1e ',...
    '%+e ',...
    '%+.2e ',...
    '%2.1f ',repmat(' ',1,2-digitsitEff),...
    '%d',repmat(' ',1,4-digitsQPI)...
    '%.1e ',...
    '%.1e\n'];

v = {k,space,...
    debugInfo{1}.f,lag,...
    normDu*xfd(1,1),...
    debugInfo{1}.eq,...
    debugInfo{1}.ineq,rho,tau,xfd(1,1),xfd(1,2),xfd(1,3),debugInfo{1}.itsMean,QPI,violationH(end),M};

displayMessage( fout,v,'fid',fid);

newLines = size(xfd,1);

fout = [repmat(' ',1,4),'%+e',repmat(' ',1,9),'%.1e ','%.1e ','%.1e ',repmat(' ',1,16),'%.1e %+e %+.2e %2.1f\n'];
for k =2:newLines
    
    v = {debugInfo{k}.f,...
         normDu*xfd(k,1),...
         debugInfo{k}.eq,...
         debugInfo{k}.ineq,xfd(k,1),xfd(k,2),xfd(k,3),debugInfo{k}.itsMean};
    displayMessage( fout,v,'fid',fid);
    
end

fclose(fid);
end

